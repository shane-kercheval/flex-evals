[project]
name = "flex-evals"
version = "0.2.1"
description = "TBD"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "jsonpath-ng>=1.6.0",
    "packaging>=25.0",
    "pydantic>=2.11.6",
    "python-dotenv>=1.1.0",
    "pyyaml>=6.0.2",
    "requests>=2.32.4",
    "ruamel-yaml>=0.18.14",
]

[dependency-groups]
dev = [
    "coverage>=7.9.1",
    "faker>=37.4.0",
    "ipykernel>=6.29.5",
    "jinja2>=3.1.6",
    "matplotlib>=3.10.3",
    "pandas>=2.3.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-mock>=3.14.1",
    "pytest-timeout>=2.4.0",
    "ruff>=0.11.13",
    "seaborn>=0.13.2",
    "sik-llms>=0.3.19",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/flex_evals"]

[build-system]
requires = ["hatchling>=1.17.1"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
pythonpath = ["src"]
timeout = 60
timeout_method = "signal"  # note this only works on unix; "thread" method (default) is safer but might not catch hanging subprocesses
asyncio_default_fixture_loop_scope = "function"
# Ignore warnings about classes that start with "Test" but aren't test classes
filterwarnings = [
    "ignore::pytest.PytestCollectionWarning",
]
